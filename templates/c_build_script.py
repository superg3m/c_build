# -------------------------------- GENERATED BY C_BUILD --------------------------------
from c_build.source.Utilities import *
from c_build.source.Manager import *
# --------------------------------------------------------------------------------------
compiler_name = C_BUILD_COMPILER_NAME() if C_BUILD_IS_DEPENDENCY() else "gcc"
compiler_std_version = "c11"
compiler_warning_level = ""
compiler_disable_specific_warnings = []
compiler_treat_warnings_as_errors = True

project_name = "some-project"
project_dependencies = [""]
project_rebuild_project_dependencies = True
project_debug_with_visual_studio = True
project_executable_procedures = ["test_ckg.exe"]

if compiler_name == "cl":
    project_warning_level = "2"
    project_disable_specific_warnings = ["5105", "4668", "4820"]
elif compiler_name in ["gcc", "cc", "clang"]:
    project_warning_level = "all"

build_suffix = f"build_{compiler_name}"
procedures_config = {
    "something_lib": {
        "build_directory": f"./{build_suffix}",
        "output_name": f"{C_BUILD_LIB('ckit', compiler_name)}",
        "source_files": ["../ckg/ckg.c", "../ckit.c"],
        "additional_libs": [] if compiler_name == "cl" else ["-lUser32", "-lGDI32"],
        "compile_time_defines": [],
        "include_paths": [],
    },
    "something_test": {
        "build_directory": f"./Tests/CoreTest/{build_suffix}",
        "output_name": "ckit_test.exe",
        "source_files": ["../*.c"],
        "additional_libs": [f"../../../{build_suffix}/{C_BUILD_LIB('ckit', compiler_name)}"],
        "compile_time_defines": [],
        "include_paths": [],
    },
}

compiler_config = {key: value for key, value in locals().items() if key.startswith('compiler_')}
project_config = {key: value for key, value in locals().items() if key.startswith('project_')}

manager: Manager = Manager(compiler_config, project_config, procedures_config)
manager.build_project()
# -------------------------------------------------------------------------------------
